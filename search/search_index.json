{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to my page Here you'll find my Digital Narrative Version 2 for WRIT 5562, as well as two projects I completed during the semester.","title":"Home"},{"location":"#welcome-to-my-page","text":"Here you'll find my Digital Narrative Version 2 for WRIT 5562, as well as two projects I completed during the semester.","title":"Welcome to my page"},{"location":"DITA/","text":"DITA Project Here is a PDF copy of my DITA project. The document is a brief user manual about model kits that contains examples from each of the topic types. Building A Model Kit","title":"DITA Project"},{"location":"DITA/#dita-project","text":"Here is a PDF copy of my DITA project. The document is a brief user manual about model kits that contains examples from each of the topic types. Building A Model Kit","title":"DITA Project"},{"location":"DigitalNarrative/","text":"Digital Narrative Over the course of the semester, we studied approaches to writing using different digital technologies. Technical communication is a wide and varied field, and the different technologies we learned reflected the different types of writing that occur in the industry. I not only learned how to operate the different technologies, but also got to step into the shoes of a technical communicator and approach the technologies like they would. The following paragraphs will recount my journey this semester, highlight connections I've made between using technologies and writing, and how I've become a better digital communicator. Reverse Engineering Learning from other people's examples is a time-effective and reliable method that I have used many times when learning new tools. I applied this technique to great effect when learning two technologies this semester: HTML/CSS and DITA. For website creation using HTML and CSS, it was initially difficult to envision a polished website when I didn't know the capabilities of those two languages. I could rely on my basic knowledge of different elements, but this wouldn't create a webpage that is rich in information and structure. So, with curiosity, I visited other websites to look at how they arranged different types of information with elements, and what relationships between specific parent and child elements existed. I used the \"Inspect Element\" feature liberally. After visiting a few websites and comparing their approaches to ensure that I wasn't encountering any web design anomalies, I started entering elements into my code editor. Sometimes they wouldn't work the way I had planned and I had to find other ways to write the code, but this only added to my learning. When we were learning DITA, I also entered with no experience writing in this language. Luckily I chose resources that contained good documentation and examples. I would never have known what a proper DITA document looked like without them. One area where I wanted to imitate the sample document which came with one of my software pieces was their inclusion of a related information area on certain pages that would guide readers to information they might find helpful. It turns out they used an element that I hadn't heard about, a related topic link. I added this to my document, and to my surprise underneath the link was a short blurb containing the short description from that DITA topic. I could then tell why the short description element for the topics was so important; the reader should know what the topic is about before they click on it and this information should be relevant in all instances across the document. Thus, applying another DITA author's techniques lead to making my document more helpful and taught me about the value in writing in a way that makes reusable content possible. Thinking Like A Technical Communicator One of my biggest blind spots before this semester was the experience of working independently and within a team as a technical communicator. The processes, the aspects of teamwork and collaboration, and technology's influence on the entire thing were unknown to me. I think that the contents of the different modules did a great job of giving me a taste of the work of a hypothetical technical communicator. Before jumping immediately into designing a website for our client project, we had to carefully analyze the audience's needs and potential uses. The process that we followed ensured that every design decision we made was based on evidence. It was a long process, but it made for a better final design and instilled the value of approaching design with the audience at the front of my mind. The writing and planning process frequently involves working as a team, so I had to use my new writing technologies in a way so others could understand me and my writing. I learned the rules of DITA topics so that at some future point others could reuse my content in a variety of formats. When I was writing HTML and CSS, I used best practices that made the code easier to understand for me and other code writers, such as writing with semantics. It is a longer process, but it makes the content more accessible and gives it clearer meaning. All in all, learning digital technologies was as much about skill acquisition as it was about learning good practices when using them. Reflection Thinking back on the semester, it's clear that I have improved my digital literacy in the sense that I now know about more tools and I know how to use more of them. Some technologies, like HTML and CSS, are commonly used outside of technical communications but having that knowledge is applicable to many technical communication fields. Others, such as DITA, are primarily used by technical communicators. I think having that balance between knowledge of general and tailored tools gives me the skills to work in a multitude and settings makes me a more well-rounded technical communicator. The processes and technical jargon that I didn't know before makes me feel prepared for scenarios that may come my way, too. For example, the specific steps of setting up an audience analysis can be applied to any situation. Learning the language of technical communicators will be a benefit when I am working with others inside and outside of the technical communications sphere. I look forward to seeing where my knowledge of digital technologies and technical communications takes me.","title":"Digital Narrative"},{"location":"DigitalNarrative/#digital-narrative","text":"Over the course of the semester, we studied approaches to writing using different digital technologies. Technical communication is a wide and varied field, and the different technologies we learned reflected the different types of writing that occur in the industry. I not only learned how to operate the different technologies, but also got to step into the shoes of a technical communicator and approach the technologies like they would. The following paragraphs will recount my journey this semester, highlight connections I've made between using technologies and writing, and how I've become a better digital communicator.","title":"Digital Narrative"},{"location":"DigitalNarrative/#reverse-engineering","text":"Learning from other people's examples is a time-effective and reliable method that I have used many times when learning new tools. I applied this technique to great effect when learning two technologies this semester: HTML/CSS and DITA. For website creation using HTML and CSS, it was initially difficult to envision a polished website when I didn't know the capabilities of those two languages. I could rely on my basic knowledge of different elements, but this wouldn't create a webpage that is rich in information and structure. So, with curiosity, I visited other websites to look at how they arranged different types of information with elements, and what relationships between specific parent and child elements existed. I used the \"Inspect Element\" feature liberally. After visiting a few websites and comparing their approaches to ensure that I wasn't encountering any web design anomalies, I started entering elements into my code editor. Sometimes they wouldn't work the way I had planned and I had to find other ways to write the code, but this only added to my learning. When we were learning DITA, I also entered with no experience writing in this language. Luckily I chose resources that contained good documentation and examples. I would never have known what a proper DITA document looked like without them. One area where I wanted to imitate the sample document which came with one of my software pieces was their inclusion of a related information area on certain pages that would guide readers to information they might find helpful. It turns out they used an element that I hadn't heard about, a related topic link. I added this to my document, and to my surprise underneath the link was a short blurb containing the short description from that DITA topic. I could then tell why the short description element for the topics was so important; the reader should know what the topic is about before they click on it and this information should be relevant in all instances across the document. Thus, applying another DITA author's techniques lead to making my document more helpful and taught me about the value in writing in a way that makes reusable content possible.","title":"Reverse Engineering"},{"location":"DigitalNarrative/#thinking-like-a-technical-communicator","text":"One of my biggest blind spots before this semester was the experience of working independently and within a team as a technical communicator. The processes, the aspects of teamwork and collaboration, and technology's influence on the entire thing were unknown to me. I think that the contents of the different modules did a great job of giving me a taste of the work of a hypothetical technical communicator. Before jumping immediately into designing a website for our client project, we had to carefully analyze the audience's needs and potential uses. The process that we followed ensured that every design decision we made was based on evidence. It was a long process, but it made for a better final design and instilled the value of approaching design with the audience at the front of my mind. The writing and planning process frequently involves working as a team, so I had to use my new writing technologies in a way so others could understand me and my writing. I learned the rules of DITA topics so that at some future point others could reuse my content in a variety of formats. When I was writing HTML and CSS, I used best practices that made the code easier to understand for me and other code writers, such as writing with semantics. It is a longer process, but it makes the content more accessible and gives it clearer meaning. All in all, learning digital technologies was as much about skill acquisition as it was about learning good practices when using them.","title":"Thinking Like A Technical Communicator"},{"location":"DigitalNarrative/#reflection","text":"Thinking back on the semester, it's clear that I have improved my digital literacy in the sense that I now know about more tools and I know how to use more of them. Some technologies, like HTML and CSS, are commonly used outside of technical communications but having that knowledge is applicable to many technical communication fields. Others, such as DITA, are primarily used by technical communicators. I think having that balance between knowledge of general and tailored tools gives me the skills to work in a multitude and settings makes me a more well-rounded technical communicator. The processes and technical jargon that I didn't know before makes me feel prepared for scenarios that may come my way, too. For example, the specific steps of setting up an audience analysis can be applied to any situation. Learning the language of technical communicators will be a benefit when I am working with others inside and outside of the technical communications sphere. I look forward to seeing where my knowledge of digital technologies and technical communications takes me.","title":"Reflection"},{"location":"Markdown/","text":"Markdown Project Here is a copy of my project where I wrote about Blaine Kyllo's presentation about establishing roles and responsibilities in a team environment. You can download the document in a Markdown or HTML format. Markdown HTML","title":"Markdown Project"},{"location":"Markdown/#markdown-project","text":"Here is a copy of my project where I wrote about Blaine Kyllo's presentation about establishing roles and responsibilities in a team environment. You can download the document in a Markdown or HTML format. Markdown HTML","title":"Markdown Project"},{"location":"curle/","text":"Who Does What, When: Aligning Content Stakeholders with Clear Roles and Responsibilities Contributed by Niklas Curle Overview Presenter Blaine Kyllo talks about the eternal problem of ownership in content strategy. Who exactly is the owner of a project in a group if no one can agree to take ownership? In his own definition he defines owners as those that need to be involved for the content to be effective. Owners work best when their work is specialized into one area and they aren't stretched thin with multiple responsibilities. Conversely, if no one wants to become the owner then the project won't be completed. This definition obviously must involve than one person, so the scope of ownership expands as well. With the definition of ownership changed to everyone with a stake in the project, he introduces his method of assigning people roles and responsibilities. It's called a RACI chart: R stands for responsible A stands for accountable C stands for consulted I stands for informed. These are the characteristics that employees have for different tasks, e.g. a person can be the accountable party for a particular task. Down the left side of the chart are the different tasks required for the project, and stretched across the top are the different job titles. An example: Task Chef Owner Manager Waiter Finances R/A I Cooking R A I Operations A R (Resource: Markdown Guide Extended Syntax ) You then fill in the cells with a letter depending on the employees level of engagement with the task. Key takeaways As technical communicators, we work with other teams in our company to develop documentation. It's important that everyone knows their role, otherwise there will be conflict over responsibilities. This presentation talked about a method that can prevent this from occurring and will set the team up for a successful project. Particularly for technical communicators which often have little formal power, this activity can make us more included in the entire project process. For example, before this activity other teams can forget to consult us about a task they were doing which later could lead to a bad outcome. If we were instead identified as consultants for that particular task at the start, we may have been able to remedy the problem come up with a good solution. Reflection This might be a stretch, but I thought back to learning HTML elements and how every structural and semantic representation imaginable has an element for that purpose. If you use elements the right way, your document will be better because it is more accessible and editable. Just like how determining the different responsibilities in the RACI chart leads to a clear web of relationships and a better final product, if you apply elements in HTML the right way the content can be understood by more people and makes editing easier. A RACI chart is similar to an audience analysis in that you have to identify the relevant stakeholders and their role. Some people can be identified as the primary audience and are considered vital stakeholders in the project, so if their needs aren't met the project is considered a failure. This can be directly compared to the people in the RACI chart that have the Accountable responsibility. Blaine mentioned how there should always be one person accountable for each task. Otherwise, the entire project can collapse. Other parties are less important and only need to be informed but they still need to be included in the project's design.","title":"Who Does What, When: Aligning Content Stakeholders with Clear Roles and Responsibilities"},{"location":"curle/#who-does-what-when-aligning-content-stakeholders-with-clear-roles-and-responsibilities","text":"Contributed by Niklas Curle","title":"Who Does What, When: Aligning Content Stakeholders with Clear Roles and Responsibilities"},{"location":"curle/#overview","text":"Presenter Blaine Kyllo talks about the eternal problem of ownership in content strategy. Who exactly is the owner of a project in a group if no one can agree to take ownership? In his own definition he defines owners as those that need to be involved for the content to be effective. Owners work best when their work is specialized into one area and they aren't stretched thin with multiple responsibilities. Conversely, if no one wants to become the owner then the project won't be completed. This definition obviously must involve than one person, so the scope of ownership expands as well. With the definition of ownership changed to everyone with a stake in the project, he introduces his method of assigning people roles and responsibilities. It's called a RACI chart: R stands for responsible A stands for accountable C stands for consulted I stands for informed. These are the characteristics that employees have for different tasks, e.g. a person can be the accountable party for a particular task. Down the left side of the chart are the different tasks required for the project, and stretched across the top are the different job titles. An example: Task Chef Owner Manager Waiter Finances R/A I Cooking R A I Operations A R (Resource: Markdown Guide Extended Syntax ) You then fill in the cells with a letter depending on the employees level of engagement with the task.","title":"Overview"},{"location":"curle/#key-takeaways","text":"As technical communicators, we work with other teams in our company to develop documentation. It's important that everyone knows their role, otherwise there will be conflict over responsibilities. This presentation talked about a method that can prevent this from occurring and will set the team up for a successful project. Particularly for technical communicators which often have little formal power, this activity can make us more included in the entire project process. For example, before this activity other teams can forget to consult us about a task they were doing which later could lead to a bad outcome. If we were instead identified as consultants for that particular task at the start, we may have been able to remedy the problem come up with a good solution.","title":"Key takeaways"},{"location":"curle/#reflection","text":"This might be a stretch, but I thought back to learning HTML elements and how every structural and semantic representation imaginable has an element for that purpose. If you use elements the right way, your document will be better because it is more accessible and editable. Just like how determining the different responsibilities in the RACI chart leads to a clear web of relationships and a better final product, if you apply elements in HTML the right way the content can be understood by more people and makes editing easier. A RACI chart is similar to an audience analysis in that you have to identify the relevant stakeholders and their role. Some people can be identified as the primary audience and are considered vital stakeholders in the project, so if their needs aren't met the project is considered a failure. This can be directly compared to the people in the RACI chart that have the Accountable responsibility. Blaine mentioned how there should always be one person accountable for each task. Otherwise, the entire project can collapse. Other parties are less important and only need to be informed but they still need to be included in the project's design.","title":"Reflection"},{"location":"mkdocs/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"mkdocs/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"mkdocs/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"mkdocs/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"welcome/","text":"","title":"Welcome"}]}